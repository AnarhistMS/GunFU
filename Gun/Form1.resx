<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>